local broadcast = require "utils.broadcast"
local input = require "utils.input"
local flow = require "utils.flow"
local animals = require "game.animals"

local animations = { [animals.RABBIT] = hash("round_rabbit"), [animals.SNAKE] = hash("round_snake"), [animals.ELEPHANT] = hash("round_elephant") }
local ability_texts = { [animals.RABBIT] = "ABILITY: JUMP!", [animals.SNAKE] = "ABILITY: RUSH!", [animals.ELEPHANT] = "ABILITY: CRUSH!" }

function init(self)
	input.acquire()
	self.score = 0
	self.shapeshift_node = gui.get_node("shapeshift")
	self.ability_node = gui.get_node("ability")
	gui.set_enabled(self.shapeshift_node, false)
	gui.set_enabled(self.ability_node, false)
end

function final(self)
	input.release()
end

function update(self, dt)
	flow.update()
	self.score = self.score + 5 * dt
	gui.set_text(gui.get_node("score"), tostring(math.floor(self.score)))
end


function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		if gui.is_enabled(self.shapeshift_node) and gui.pick_node(self.shapeshift_node, action.screen_x, action.screen_y) then
			broadcast.send(hash("shapeshift"), { animal = self.animal })
		end
	end
end

function on_message(self, message_id, message, sender)
	flow.on_message(message_id, message, sender)
	if message_id == hash("increase_score") then
		self.score = self.score + message.amount
	elseif message_id == hash("shapeshift") then
		flow.start(function()
			self.animal = message.from_animal
			gui.set_enabled(self.shapeshift_node, message.from_animal ~= nil)
			if message.from_animal then
				gui.play_flipbook(self.shapeshift_node, animations[message.from_animal])
			end

			gui.set_text(self.ability_node, ability_texts[message.to_animal] or "")
			gui.set_enabled(self.ability_node, true)
			gui.set_position(self.ability_node, vmath.vector3(-200, 568, 0))
			gui.animate(self.ability_node, gui.PROP_POSITION, vmath.vector3(320, 568, 0), gui.EASING_INBACK, 0.5, 0)
			flow.delay(2.5)
			gui.animate(self.ability_node, gui.PROP_POSITION, vmath.vector3(840, 568, 0), gui.EASING_OUTBACK, 0.5, 0)
		end)
	end
end
